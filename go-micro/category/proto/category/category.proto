syntax = "proto3";

package category;

option go_package = "./proto;product";

service Category {

  rpc CreateCategory(CategoryRequest) returns (CreateCategoryResponse){}

  rpc UpdateCategory(CategoryRequest) returns (UpdateCategoryResponse){}

  rpc DeleteCategory(DeleteCategoryRequest) returns (DeleteCategoryResponse){}

  rpc FindCategoryByName(FindCategoryByNameRequest) returns (CategoryResponse){}

  rpc FindCategoryByID(FindCategoryByIDRequest) returns (CategoryResponse){}

  rpc FindCategoryByLevel(FindCategoryByLevelRequest) returns (FindAllCategoryResponse){}

  rpc FindCategoryByParent(FindCategoryByParentRequest) returns (FindAllCategoryResponse){}

  rpc FindAllCategory(FindAllCategoryRequest) returns (FindAllCategoryResponse){}

}

message CategoryRequest {
  string category_name = 1;
  int32 category_level = 2;
  int32 category_parent = 3;
  string category_image = 4;
  string category_description = 5;
}

message DeleteCategoryRequest {
  int64 category_id = 1;
}

message FindCategoryByNameRequest {
  string category_name = 1;
}

message FindCategoryByIDRequest {
  int64  category_id = 1;
}

message FindCategoryByLevelRequest{
  int32 category_level = 1;
}

message FindCategoryByParentRequest{
  int32 category_parent = 1;
}

message FindAllCategoryRequest {

}


message CreateCategoryResponse {
  string message = 1;
  int64  category_id = 2;
}

message UpdateCategoryResponse {
  string message = 1;
}

message DeleteCategoryResponse {
  string category_name = 1;
}

message CategoryResponse {
  int64 id = 1;
  string category_name = 2;
  int32 category_level = 3;
  int32 category_parent = 4;
  string category_image = 5;
  string category_description = 6;
}

message FindAllCategoryResponse {

  repeated CategoryResponse category =1 ; //支持多个CategoryResponse的结果
}